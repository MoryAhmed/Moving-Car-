from OpenGL.GL import *
from OpenGL.GLU import *
from OpenGL.GLUT import *
from math import*


def lights():
    glLoadIdentity()
    glColor3f(.9,.9,0)
    
    glTranslate(x+2.7,.35,1)
   
    glutSolidSphere(.3,6,6)
    glLoadIdentity()
    glColor3f(.9,.9,0)
    
    glTranslate(x+2.7,.35,-.5)
   
    glutSolidSphere(.3,6,6)



def Tree(x,y,z):
    glLoadIdentity()
    glColor3f(0.6,0.3,0.1)
    glTranslate(x+0.5,y-3,z+0.5)
    glScale(.1,1,.1)
    glutSolidCube(6)
    glLoadIdentity()
    glColor3f(0.4,0.6,0.1)
    glTranslate(x,y,z)
    glutSolidSphere(1.6,15,15)
    glLoadIdentity()

   

def sea():
    glLoadIdentity()
    glColor3f(0,.2,.5)
    
    glBegin(GL_POLYGON)
    glVertex(10,6,-1)
    glVertex(-17,6,-1)
    glVertex(-17,7,-1)
    glVertex(10,8,-1)
    glEnd()


def house(x,y,z,s):
    
    glLoadIdentity()
    glTranslate(x,y,z)
    glScale(1,1.4,1)
    
    glColor3f(0.8,0.7,0.3)
    glutSolidCube(s)
    glLoadIdentity()
    glColor3f(0.7,0.8,0.7)
    glBegin(GL_POLYGON)
    glVertex(1,4,6)
    glVertex(1,4,7)
    glVertex(1,3,7)
    glVertex(1,3,6)
    glEnd()
    
    glLoadIdentity()
    glColor3f(0.7,0.8,0.7)
    glBegin(GL_POLYGON)
    glVertex(1,4,7.5)
    glVertex(1,4,8.4)
    glVertex(1,3,8.4)
    glVertex(1,3,7.5)
    glEnd()

    glLoadIdentity()
    glColor3f(0,0,0)
    glBegin(GL_POLYGON)
    glVertex(1,2.3,6.6)
    glVertex(1,2.3,7.9)
    glVertex(1,-0.192,7.9)
    glVertex(1,-0.192,6.6)
    glEnd()


    



def frontWindow():
    
    glLoadIdentity()
    glTranslate(x,1,0)
    
    glColor3f(0.7,0.7,0.7)
    
    glBegin(GL_POLYGON)
    
    glVertex(1.3,.9,-1.05)
    glVertex(1.3,.9,1.5)
    glVertex(1.3,-0.25,1.5)
    glVertex(1.3,-0.25,-1.05)

    glEnd()
    
    

def street():
    glLoadIdentity()
    glColor3f(.4,.4,.4)
    glBegin(GL_POLYGON)
    glVertex(10,0,3)
    glVertex(10,0,-1.5)
    glVertex(-25,0,-1.5)
    glVertex(-20,0,3)
    glEnd()
    
    glColor3f(1,1,1)
    glBegin(GL_POLYGON)
    glVertex(6,0,.7)
    glVertex(4,0,.7)
    glVertex(4,0,1.2)
    glVertex(6,0,1.2)
    
    glEnd()

    glColor3f(1,1,1)
    glBegin(GL_POLYGON)
    glVertex(9,0,.7)
    glVertex(7,0,.7)
    glVertex(7,0,1.2)
    glVertex(9,0,1.2)
    
    glEnd()

    glColor3f(1,1,1)
    glBegin(GL_POLYGON)
    glVertex(3,0,.7)
    glVertex(1,0,.7)
    glVertex(1,0,1.2)
    glVertex(3,0,1.2)
    
    glEnd()

    glColor3f(1,1,1)
    glBegin(GL_POLYGON)
    glVertex(0,0,.7)
    glVertex(-2,0,.7)
    glVertex(-2,0,1.2)
    glVertex(0,0,1.2)
    
    glEnd()
    glColor3f(1,1,1)
    glBegin(GL_POLYGON)
    glVertex(-3,0,.7)
    glVertex(-5,0,.7)
    glVertex(-5,0,1.2)
    glVertex(-3,0,1.2)
    
    glEnd()
    glColor3f(1,1,1)
    glBegin(GL_POLYGON)
    glVertex(-6,0,.7)
    glVertex(-8,0,.7)
    glVertex(-8,0,1.2)
    glVertex(-6,0,1.2)
    
    glEnd()
    glColor3f(1,1,1)
    glBegin(GL_POLYGON)
    glVertex(-9,0,.7)
    glVertex(-11,0,.7)
    glVertex(-11,0,1.2)
    glVertex(-9,0,1.2)
    
    glEnd()
    glColor3f(1,1,1)
    glBegin(GL_POLYGON)
    glVertex(-12,0,.7)
    glVertex(-14,0,.7)
    glVertex(-14,0,1.2)
    glVertex(-12,0,1.2)
    
    glEnd()
    glColor3f(1,1,1)
    glBegin(GL_POLYGON)
    glVertex(-15,0,.7)
    glVertex(-17,0,.7)
    glVertex(-17,0,1.2)
    glVertex(-15,0,1.2)
    
    glEnd()
    

    glColor3f(0,0,0)
    glBegin(GL_LINE_LOOP)
    glVertex(10,0,3)
    glVertex(10,0,-1.5)
    glVertex(-25,0,-1.5)
    glVertex(-20,0,3)
    
    glEnd()
    


def draw_xyz():
    glBegin(GL_LINES)
    glColor3f(1, 0, 0)
    glVertex(0, 0, 0)
    glVertex(10, 0, 0)

    glColor3f(0, 1, 0)
    glVertex(0, 0, 0)
    glVertex(0, 10, 0)

    glColor3f(0, 0, 1)
    glVertex(0, 0, 0)
    glVertex(0, 0, 10)
    glEnd()


def myInit():
    glMatrixMode(GL_PROJECTION)
    glLoadIdentity()
    gluPerspective(60, 1, 1, 30)
    gluLookAt(8, 9, 10,
              0, 0, 0,
              0, 1, 0)

    glClearColor(0, .2, 0,1)


angle = 0
x = 0
forward = True


def draw():
    global angle
    global x
    global forward

    
    glMatrixMode(GL_MODELVIEW)
    glLoadIdentity()
    glClear(GL_COLOR_BUFFER_BIT)
    
    
    street()
    sea()
    
    
    #draw_xyz()
    Tree(-8,4,-7)
    Tree(-2,4,-7)
    Tree(4,4,-7)
    Tree(10,4,-7)
    Tree(-14,4,-7)
    
    
    glColor3f(0, 0, 0)
    glLoadIdentity()
    glTranslate(x+0.5*5, -0.5 * 0.25*5, 0.5 * 0.5*5)
    glRotate(angle, 0, 0, 1)
    glutSolidTorus(0.125, 0.5, 10, 10)
    
    glLoadIdentity()
    glTranslate(x+0.5*5, -0.5 * 0.25*5, - 0.5 * 0.5*5)
    glRotate(angle, 0, 0, 1)
    glutSolidTorus(0.125, 0.5, 10, 10)

    glLoadIdentity()
    glTranslate(x-0.5*5, -0.5 * 0.25*5, -0.5 * 0.5*5)
    glRotate(angle, 0, 0, 1)
    glutSolidTorus(0.125, 0.5, 10, 10)

    glLoadIdentity()
    glTranslate(x-0.5*5, -0.5 * 0.25*5, 0.5 * 0.5*5)
    glRotate(angle, 0, 0, 1)
    glutSolidTorus(0.125, 0.5, 10, 10)

    glLoadIdentity()
    glColor3f(.5, 0, 0)
    glTranslate(x, 0, 0)
    glScale(1, 0.25, 0.5)
    glutSolidCube(5)

    glLoadIdentity()
    glTranslate(x,5*0.25,0)
    glScale(0.5, 0.25, 0.5)
    glutSolidCube(5)
    house(-3,0,6.5,4)
    
    
    frontWindow()
    
    lights()
    
    Tree(4,2,5)
    
    
    glutSwapBuffers()

    if forward:
        angle -= 0.1
        x += 0.002
        if x > 6:
            forward = False
    else:
        angle += 0.1
        x -= 0.002
        if x < -7:
            forward = True

            
glutInit()
glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB)
glutInitWindowSize(600, 600)
glutCreateWindow(b"Moving Car")
myInit()
glutDisplayFunc(draw)
glutIdleFunc(draw)
glutMainLoop()
